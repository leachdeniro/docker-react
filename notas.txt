

permission denied, mkdir '/app/node_modules.cache' - Linux and WSL2 hosts
-------------------------------------------------------------------------


There is an issue with permissions in regards to Linux hosts (which includes Windows WSL2) and volumes. It can be solved by doing the following:


FROM node:alpine
 
USER node
 
RUN mkdir -p /home/node/app
WORKDIR /home/node/app
 
COPY --chown=node:node ./package.json ./
RUN npm install
COPY --chown=node:node ./ ./
 
CMD ["npm", "start"]


Remember to update the working directory paths in your docker run command to /home/node/app instead of just /app



When we refactor to use Docker Compose, remember to update the working directory paths in your compose file:

volumes:

    volumes:
      - /home/node/app/node_modules
      - .:/home/node/app
Explanation of changes:

We are specifying that the USER which will execute RUN, CMD, or ENTRYPOINT instructions will be the node user, as opposed to root (default).

https://docs.docker.com/engine/reference/builder/#user

We are then creating a directory of /home/node/app prior to the WORKDIR instruction. This will prevent a permissions issue since WORKDIR by default will create a directory if it does not exist and set ownership to root.

The inline chown commands will set ownership of the files you are copying from your local environment to the node user in the container.

The end result will be that all files and directories in the project will no longer be owned by root and will instead be owned by the node user.




React App Exited With Code 0
4-1-2020

Recently, a bug was introduced with the latest Create React App version that is causing the React app to exit when starting with Docker Compose.

To Resolve this:

Add stdin_open property to your docker-compose.yml file

  web:
    stdin_open: true
Make sure you rebuild your containers after making this change with  docker-compose down && docker-compose up --build

https://github.com/facebook/create-react-app/issues/8688

https://stackoverflow.com/questions/60790696/react-scripts-start-exiting-in-docker-foreground-cmd



Required Travis Script Updates
In the upcoming lecture, we will be adding a script to our .travis.yml file. Due to a change in how the Jest library works with Create React App, we need to make a small modification:

script:
  - docker run USERNAME/docker-react npm run test -- --coverage
 
instead should be:

script:
  - docker run -e CI=true USERNAME/docker-react npm run test
Additionally, you may want to set the following property to the top of your .travis.yml file:

language: generic 
You can read up on the CI=true variable here:

https://facebook.github.io/create-react-app/docs/running-tests#linux-macos-bash

and environment variables in Docker here:

https://docs.docker.com/engine/reference/run/#env-environment-variables


Important info about AWS Platform Versions
------------------------------------------
updated 10-8-2020

On October 6, AWS made some significant platform changes that will affect our single container application. 
Among these changes was adding the full support of using Docker Compose to provision a production AWS environment. 
This means that Elastic Beanstalk will no longer first look for a Dockerfile, it will first look for a docker-compose 
file and attempt to build and run a container from it.

When creating our Elastic Beanstalk environment in the next lecture, we need to select Docker running on 
64bit Amazon Linux instead of Docker running on 64bit Amazon Linux 2. This will ensure that our container is built 
using the Dockerfile and not the compose file.

Travis Keys Update and Account Migration
----------------------------------------
In the upcoming lecture, we will be adding our AWS variables to the deploy script of the .travis.yml file. 
There is a slight change that will be required, otherwise, you will get an error when Travis attempts to run your code.

The code will now look like this:

access_key_id: $AWS_ACCESS_KEY
secret_access_key: $AWS_SECRET_KEY


Important - Please read before deploying

Travis is in the process of finalizing its transition from .org to .com. By the end of May 2021, the .org services will 
be fully shut down. If you are still using a travis-ci.org account you will need to follow this migration guide ASAP:

https://docs.travis-ci.com/user/migrate/open-source-repository-migration#migrating-a-repository